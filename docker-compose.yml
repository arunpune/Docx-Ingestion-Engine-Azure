version: '3.8'

services:
  insurance-ai-agent:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - LOG_LEVEL=INFO
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: insurance_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Worker services
  ingestion-worker:
    build: .
    command: python -m src.ingestion_engine.ingestion_processor
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  ocr-worker:
    build: .
    command: python -m src.ocr_engine.ocr_processor
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  classification-worker:
    build: .
    command: python -m src.ocr_engine.document_classifier
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
