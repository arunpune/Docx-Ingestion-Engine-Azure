{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "defaultValue": "insurance-email-processor",
            "metadata": {
                "description": "Name of the Logic App"
            }
        },
        "emailProcessorEndpoint": {
            "type": "string",
            "metadata": {
                "description": "URL of the email processor API endpoint"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Storage Account"
            }
        },
        "containerName": {
            "type": "string",
            "defaultValue": "insurance-documents",
            "metadata": {
                "description": "Name of the blob container"
            }
        }
    },
    "variables": {
        "office365ConnectionName": "office365",
        "azureBlobConnectionName": "azureblob"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "Office 365 Outlook",
                "customParameterValues": {},
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01", 
            "name": "[variables('azureBlobConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "Azure Blob Storage",
                "customParameterValues": {},
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'azureblob')]"
                },
                "parameterValues": {
                    "accountName": "[parameters('storageAccountName')]",
                    "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('azureBlobConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_email_arrives_(V3)": {
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v3/Mail/OnNewEmail",
                                "queries": {
                                    "fetchOnlyWithAttachment": false,
                                    "folderPath": "Inbox",
                                    "importance": "Any",
                                    "includeAttachments": true
                                }
                            },
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            }
                        }
                    },
                    "actions": {
                        "Initialize_variable_-_Processing_ID": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "processingId",
                                        "type": "string",
                                        "value": "@{concat('EMAIL_', formatDateTime(utcNow(), 'yyyyMMdd_HHmmss'), '_', substring(guid(), 0, 8))}"
                                    }
                                ]
                            }
                        },
                        "Create_email_file_in_blob": {
                            "runAfter": {
                                "Initialize_variable_-_Processing_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@base64ToBinary(triggerBody()?['body'])",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('storageAccountName')))}/files",
                                "queries": {
                                    "folderPath": "[concat('/', parameters('containerName'), '/emails/')]",
                                    "name": "@{variables('processingId')}.eml",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Call_Email_Processor_API": {
                            "runAfter": {
                                "Create_email_file_in_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "POST",
                                "uri": "[concat(parameters('emailProcessorEndpoint'), '/process-email-url')]",
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "body": {
                                    "email_file_url": "@body('Create_email_file_in_blob')?['Path']",
                                    "metadata": {
                                        "from": "@triggerBody()?['from']",
                                        "to": "@triggerBody()?['to']",
                                        "subject": "@triggerBody()?['subject']",
                                        "received_time": "@triggerBody()?['receivedDateTime']",
                                        "has_attachments": "@triggerBody()?['hasAttachments']",
                                        "processing_id": "@variables('processingId')"
                                    }
                                }
                            }
                        },
                        "Process_Attachments": {
                            "runAfter": {
                                "Call_Email_Processor_API": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Condition",
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['hasAttachments']",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "actions": {
                                "For_each_attachment": {
                                    "foreach": "@triggerBody()?['attachments']",
                                    "actions": {
                                        "Create_attachment_blob": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@base64ToBinary(items('For_each_attachment')?['content'])",
                                                "headers": {
                                                    "ReadFileMetadataFromServer": true
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('storageAccountName')))}/files",
                                                "queries": {
                                                    "folderPath": "[concat('/', parameters('containerName'), '/attachments/@{variables(''processingId'')}/')]",
                                                    "name": "@items('For_each_attachment')?['name']",
                                                    "queryParametersSingleEncoded": true
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        }
                                    },
                                    "type": "Foreach"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "[variables('office365ConnectionName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'office365')]"
                            },
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azureBlobConnectionName'))]",
                                "connectionName": "[variables('azureBlobConnectionName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', resourceGroup().location, 'azureblob')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "logicAppUrl": {
            "type": "string",
            "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/When_a_new_email_arrives_(V3)'), '2017-07-01').value]"
        }
    }
}
